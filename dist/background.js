const c="sites_chrome_storage_id",a="queries_chrome_storage_id",m=async()=>new Promise((s,o)=>{chrome.storage.local.get(c,function(e){if(chrome.runtime.lastError)o(chrome.runtime.lastError);else{const r=e[c]?e[c].toLowerCase().split(`
`):[];s(r)}})}),d=async()=>new Promise((s,o)=>{chrome.storage.local.get(a,function(e){if(chrome.runtime.lastError)o(chrome.runtime.lastError);else{const r=new Set(e[a]?e[a].toLowerCase().split(`
`):[]);s(r)}})}),i=async()=>{const s=await m(),e=(await chrome.declarativeNetRequest.getDynamicRules()).map(r=>r.id);chrome.declarativeNetRequest.updateDynamicRules({addRules:s.filter(r=>r!="").map((r,t)=>({id:t+1,action:{type:"block"},condition:{urlFilter:r,resourceTypes:["main_frame"]}})),removeRuleIds:e},()=>console.log("Blocking rules added."))};i();chrome.tabs.onUpdated.addListener((s,o,e)=>{if(o.status==="complete"&&e.url)if(e.url.includes("https://www.bing.com/search")){const n=`https://www.google.com/search${new URL(e.url).search}`;chrome.tabs.update(s,{url:n})}else e.url.includes("google.com/search")&&d().then(r=>{const t=new URL(e.url||""),l=(new URLSearchParams(t.search).get("q")||"").split(" ");for(const u of l)r.has(u.toLowerCase())&&chrome.tabs.update(s,{url:"https://www.google.com/search"})})});chrome.runtime.onMessage.addListener(s=>{s.action==="refreshBlockingRules"&&i()});
